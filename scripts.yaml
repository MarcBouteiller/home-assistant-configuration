fermeture_volets:
  alias: Fermeture volets
  sequence:
    - service: cover.close_cover
      data:
        entity_id: all

ouverture_volets:
  alias: Ouverture volets
  sequence:
    - service: cover.open_cover
      data:
        entity_id: all

positionner_volets:
  alias: Positionner les volets
  sequence:
    - service: cover.set_cover_position
      data_template:
        entity_id: all
        position: "{{ position }}"

sunset_closing_covers:
  alias: Fermeture volets nuit
  sequence:
    - condition: state
      entity_id: input_boolean.cover_mode
      state: 'on'
    - service: script.notify_closing_covers
      data_template:
        message: "Les volets vont se fermer" 
    - delay: 00:01:00 #1 minute to answer
    - delay: '00:{{ states.input_number.closing_covers_delay.state | int }}:00'  
    - service: script.fermeture_volets
    # Reset the value at end
    - service: input_number.set_value
      data:
        entity_id: input_number.closing_covers_delay
        value: 0


eteindre_prise_garage:
  alias: Eteindre prise du garage
  sequence:
    - condition: numeric_state
      entity_id: sensor.power_prise_garage
      below: 10
    - service: switch.turn_off
      data:
        entity_id: switch.prise_garage

turn_off_tv:
  alias: Minuteur Chromecast
  sequence:
    - condition: numeric_state
      entity_id: input_number.tv_timer
      above: 0
    - delay: '00:{{ states.input_number.tv_timer.state | int }}:00'  
    - service: media_player.turn_off
      data:
        entity_id: media_player.chromecast_salon 
    - service: input_number.set_value
      data:
        entity_id: input_number.tv_timer
        value: 30

notify_car_charging:
  alias: notifier chargement de la voiture
  sequence:
  - service: script.notify
    data_template:
      message: "Voiture en charge : {{states.sensor.charge_estimated_time_hour.state }}h"

notify_car_charged:
  alias: notifier fin de chargement de la voiture
  sequence:
  - service: script.notify
    data_template:
      message: "Voiture chargée en : {{states.sensor.day_car_charge.attributes.value }}"

turn_on_cameras:
  alias: Allumer caméras
  sequence:
    - service: switch.turn_on
      entity_id: switch.neo_coolcam_power_plug_12a_switch_2    
    - service: input_boolean.turn_on
      entity_id: input_boolean.camera_sejour_state

turn_off_cameras:
  alias: Eteindre caméras
  sequence:
    - service: switch.turn_off
      entity_id: switch.neo_coolcam_power_plug_12a_switch_2    
    - service: input_boolean.turn_off
      entity_id: input_boolean.camera_sejour_state

notify_marc_roads:
  alias: Notifications des routes
  sequence:
    - service: script.notify
      data_template:
        target: "@UJ3RKSDT2"
        message: "DM: {{ states.sensor.waze_dm_roads.state }}({{ states.sensor.waze_dm.state }}mn)"

turn_on_light_if_cover_closed:
  alias: Allumage des lumières en rentrant
  sequence:
    - condition: state
      entity_id: cover.fibaro_system_fgrm222_roller_shutter_controller_2_level
      state: 'closed'
    - condition: state
      entity_id: input_boolean.night_mode
      state: 'off'
    - service: light.turn_on
      entity_id: light.spots_led
    - service: switch.turn_on
      entity_id: switch.neo_coolcam_power_plug_12a_switch_3

turn_off_all_lights:
  alias: Extinction de toutes les lumières
  sequence:
    - service: light.turn_off
      entity_id: all
    - service: switch.turn_off
      entity_id: switch.neo_coolcam_power_plug_12a_switch_3
    - service: switch.turn_off
      entity_id: switch.neo_coolcam_power_plug_12a_switch

notify:
  alias: Slack notificator
  sequence: 
    service: notify.slack
    data_template:
      message: "{{message}}"
      title: "{{title}}"
      target: 
        - "{{target|default('#domotique')}}"
      blocks_template: >
        {% if (title | length) > O %}
        - type: section
          text: 
            type: mrkdwn
            text: "*{{ title }}*"
        {% endif %}
        {% if (message | length) > 0 %}
        - type: section
          text:
            type: plain_text
            text: "{{ message }}"
        {% endif %}

notify_action:
  alias: Slack notificator with actions
  sequence: 
    service: notify.slack
    data_template:
      message: ""
      target: 
        - "{{target|default('#domotique')}}"
      data:
        attachments:
          - title: "{{title|default('')}}"
            text: "{{message}}"
            color: "{{criticity|default('#03a9f4')}}"
            callback_id: "callback-cover"
            actions:
              - name: ok
                text: OK
                type: button
                value: 0
              - name: ten
                text: Dans 10 min
                type: button
                value: 10

notify_closing_covers:
  alias: Notifie la fermeture des volets
  sequence: 
    service: notify.slack
    data_template:
      message: ""
      target: 
        - "{{target|default('#domotique')}}"
      data:
        attachments:
          - title: "{{title|default('')}}"
            text: "{{message}}"
            color: "{{criticity|default('#03a9f4')}}"
            callback_id: "callback-cover"
            actions:
              - name: ok
                text: OK
                type: button
                value: 0
              - name: ten
                text: Dans 10 min
                type: button
                value: 10
              - name: twenty
                text: Dans 20 min
                type: button
                value: 20
              - name: stop
                text: Stop !
                type: button
                value: -1

callback_covers_notification:
  alias: Retour de la réponse de fermeture des volets
  sequence:
    - service: system_log.write
      data_template:
        message: "{{ callback_url }}"
    - service: rest_command.callback
      data_template:
        url: "{{ callback_url }}"
        payload: "{ \"replace_original\": true, \"text\": \"{{message}}\"}"
      

notify_high_temperature:
  alias: notification temperature haute
  sequence:
    - service: script.notify
      data_template:
        title: ":sunny: Il commence à faire chaud dans la maison"
        criticity: "warning"
        message: "La température du RDC est de {{states.sensor.fibaro_system_fgms001_motion_sensor_temperature.state}}°C"

notify_low_temperature:
  alias: notification temperature basse
  sequence:
    - service: script.notify
      data_template:
        title: ":snowflake: Ca se rafraîchit par ici"
        criticity: "warning"
        message: "La température du RDC est de {{states.sensor.fibaro_system_fgms001_motion_sensor_temperature.state}}°C"

test_notify:
  sequence:
    service: script.notify
    data_template:
      title: "TEST"
      message: "Ceci est un test :construction_worker:"
      data:
        file: "/config/tmp/snapshot_sejour_1.jpg"

snapshot_cameras:
  sequence:
    - service: input_number.increment
      entity_id: input_number.snapshot_cameras_counter
    - service: camera.snapshot
      data:
        entity_id: camera.sejour
        filename: 'tmp/snapshot_sejour_{{states.input_number.snapshot_cameras_counter.state|int}}.jpg'
    - service: camera.snapshot
      data:
        entity_id: camera.salon
        filename: 'tmp/snapshot_salon_{{states.input_number.snapshot_cameras_counter.state|int}}.jpg'

notify_snapshot_cameras:
  sequence:
    - service: script.snapshot_cameras
    - service: notify.slack
      data_template:
        message: ""
        data:
          file: "/config/tmp/snapshot_sejour_{{states.input_number.snapshot_cameras_counter.state|int}}.jpg"
    - service: notify.slack
      data_template:
        message: ""
        data:
          file: "/config/tmp/snapshot_salon_{{states.input_number.snapshot_cameras_counter.state|int}}.jpg"
    
